version: 2
jobs:
  javabuild:
    environment:
      - MAVEN_OPTS: "-Xmx2048m"
    docker:
      - image: scholzj/circleci-centos-java:latest
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          key: strimzi-javabuild-{{ checksum "pom.xml" }}
      - run:
          name: Build code
          command: mvn clean -B -DskipTests install
      - save_cache:
          paths:
            - ~/.m2
          key: strimzi-javabuild-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .m2
  javatests:
    environment:
      - MAVEN_OPTS: "-Xmx2048m"
    docker:
      - image: scholzj/circleci-centos-java:latest
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run unit tests
          command: mvn -B -DskipITs verify
  findbugs:
    environment:
      - MAVEN_OPTS: "-Xmx2048m"
      - MVN_ARGS:   "-B"
    docker:
      - image: scholzj/circleci-centos-java:latest
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run findbugs
          command: make findbugs
  changedderived:
    docker:
      - image: scholzj/circleci-centos-java:latest
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Check for changes in derived resources
          command: ./.circleci/changed-derived.sh
  docubuild:
    docker:
      - image: scholzj/circleci-centos-java:latest
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Run docu check
          command: make docu_check
      - run:
          name: Build HTML docs
          command: make docu_html
      - run:
          name: Build HTML docs without header
          command: make docu_htmlnoheader
      - store_artifacts:
          path: /home/circleci/project/documentation/html
          destination: docs-html
      - store_artifacts:
          path: /home/circleci/project/documentation/htmlnoheader
          destination: docs-htmlnoheader
  javaintegrationtests:
    environment:
      K8S_VERSION: v1.10.0
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v0.30.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
    machine:
      image: circleci/classic:201808-01
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config
      - run:
          name: setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: setup helm
          command: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
      - run:
          name: start minikube
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 2048 --kubernetes-version=${K8S_VERSION} &> $HOME/minikube.log 2>&1 < /dev/null
      - run:
          name: wait for minikube
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1;
            done
      - run:
          name: fix RBAC
          command: |
            # make default account cluster-admin
            kubectl create clusterrolebinding add-on-cluster-admin --clusterrole cluster-admin --serviceaccount=kube-system:default
      - run:
          name: dump cluster-info
          command: |
            kubectl cluster-info
            kubectl get po --all-namespaces
      - run:
          name: install helm in cluster
          command: |
            kubectl -n kube-system create sa tiller
            kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
            helm init --wait --service-account tiller
      - run:
          name: deploy sample nginx
          command: kubectl run circleci-example --image=nginx
      - run:
          name: dump pods & services
          command: |
            # wait for all pods to start
            sleep 30
            # dump pods
            kubectl get po  --all-namespaces | grep -vE '(kube-sys|docker)'
            echo
            # dump services
            kubectl get svc  --all-namespaces | grep -vE '(kube-sys|docker)'
      #- run:
      #    name: Install yq
      #    command: ./.travis/install_yq.sg
      #- run:
      #    name: Install Kubernetes
      #    command: ./.travis/setup-kubernetes.sg
      - run:
          name: Run unit tests
          command: mvn -B -DskipUTs verify
workflows:
  version: 2
  build-workflow:
    jobs:
      - javabuild
      - docubuild
      - findbugs:
          requires: 
            - javabuild
      - changedderived:
          requires: 
            - javabuild
      - javatests:
          requires: 
            - javabuild
            - findbugs
            - changedderived
            - docubuild
      - javaintegrationtests:
          requires:
            - javatests