apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: my-cluster
spec:
  kafka:
    version: 2.6.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "2.6"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: metrics-config.yml
  zookeeper:
    replicas: 3
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: zookeeper-metrics
          key: metrics-config.yml
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kafka-metrics
  labels:
    app: strimzi
data:
  metrics-config.yml: '{"lowercaseOutputName":true,"rules":[{"labels":{"clientId":"$3","partition":"$5","topic":"$4"},"name":"kafka_server_$1_$2","pattern":"kafka.server<type=(.+),
      name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value","type":"GAUGE"},{"labels":{"broker":"$4:$5","clientId":"$3"},"name":"kafka_server_$1_$2","pattern":"kafka.server<type=(.+),
      name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value","type":"GAUGE"},{"labels":{"cipher":"$5","listener":"$2","networkProcessor":"$3","protocol":"$4"},"name":"kafka_server_$1_connections_tls_info","pattern":"kafka.server<type=(.+),
      cipher=(.+), protocol=(.+), listener=(.+), networkProcessor=(.+)><>connections","type":"GAUGE"},{"labels":{"clientSoftwareName":"$2","clientSoftwareVersion":"$3","listener":"$4","networkProcessor":"$5"},"name":"kafka_server_$1_connections_software","pattern":"kafka.server<type=(.+),
      clientSoftwareName=(.+), clientSoftwareVersion=(.+), listener=(.+), networkProcessor=(.+)><>connections","type":"GAUGE"},{"labels":{"listener":"$2","networkProcessor":"$3"},"name":"kafka_server_$1_$4","pattern":"kafka.server<type=(.+),
      listener=(.+), networkProcessor=(.+)><>(.+):","type":"GAUGE"},{"labels":{"listener":"$2","networkProcessor":"$3"},"name":"kafka_server_$1_$4","pattern":"kafka.server<type=(.+),
      listener=(.+), networkProcessor=(.+)><>(.+)","type":"GAUGE"},{"name":"kafka_$1_$2_$3_percent","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)Percent\\w*><>MeanRate","type":"GAUGE"},{"name":"kafka_$1_$2_$3_percent","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)Percent\\w*><>Value","type":"GAUGE"},{"labels":{"$4":"$5"},"name":"kafka_$1_$2_$3_percent","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)Percent\\w*, (.+)=(.+)><>Value","type":"GAUGE"},{"labels":{"$4":"$5","$6":"$7"},"name":"kafka_$1_$2_$3_total","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)PerSec\\w*, (.+)=(.+), (.+)=(.+)><>Count","type":"COUNTER"},{"labels":{"$4":"$5"},"name":"kafka_$1_$2_$3_total","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)PerSec\\w*, (.+)=(.+)><>Count","type":"COUNTER"},{"name":"kafka_$1_$2_$3_total","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)PerSec\\w*><>Count","type":"COUNTER"},{"labels":{"$4":"$5","$6":"$7"},"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.+), (.+)=(.+)><>Value","type":"GAUGE"},{"labels":{"$4":"$5"},"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.+)><>Value","type":"GAUGE"},{"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)><>Value","type":"GAUGE"},{"labels":{"$4":"$5","$6":"$7"},"name":"kafka_$1_$2_$3_count","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.+), (.+)=(.+)><>Count","type":"COUNTER"},{"labels":{"$4":"$5","$6":"$7","quantile":"0.$8"},"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.*), (.+)=(.+)><>(\\d+)thPercentile","type":"GAUGE"},{"labels":{"$4":"$5"},"name":"kafka_$1_$2_$3_count","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.+)><>Count","type":"COUNTER"},{"labels":{"$4":"$5","quantile":"0.$6"},"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+), (.+)=(.*)><>(\\d+)thPercentile","type":"GAUGE"},{"name":"kafka_$1_$2_$3_count","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)><>Count","type":"COUNTER"},{"labels":{"quantile":"0.$4"},"name":"kafka_$1_$2_$3","pattern":"kafka.(\\w+)<type=(.+),
      name=(.+)><>(\\d+)thPercentile","type":"GAUGE"}]}'
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: zookeeper-metrics
  labels:
    app: strimzi
data:
  metrics-config.yml: '{"lowercaseOutputName":true,"rules":[{"name":"zookeeper_$2","pattern":"org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)","type":"GAUGE"},{"labels":{"replicaId":"$2"},"name":"zookeeper_$3","pattern":"org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+),
      name1=replica.(\\d+)><>(\\w+)","type":"GAUGE"},{"labels":{"memberType":"$3","replicaId":"$2"},"name":"zookeeper_$4","pattern":"org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+),
      name1=replica.(\\d+), name2=(\\w+)><>(Packets\\w+)","type":"COUNTER"},{"labels":{"memberType":"$3","replicaId":"$2"},"name":"zookeeper_$4","pattern":"org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+),
      name1=replica.(\\d+), name2=(\\w+)><>(\\w+)","type":"GAUGE"},{"labels":{"memberType":"$3","replicaId":"$2"},"name":"zookeeper_$4_$5","pattern":"org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+),
      name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)","type":"GAUGE"}],"type":"inline"}'
