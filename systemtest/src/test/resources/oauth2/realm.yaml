apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: oauth2-kafka
  labels:
    app: sso
spec:
  realm:
    id: "internal"
    realm: "internal"
    enabled: True
    displayName: "Internal realm with users"
    users:
      - username: "alice"
        firstName: "Alice"
        lastName: "Doe"
        email: "alice@example.com"
        enabled: True
        emailVerified: False
        credentials:
          - type: password
            value: "alice-password"
        realmRoles:
          - "user"
        clientRoles:
          kafka:
            - "kafka-topic:superapp_*:owner"
            - "kafka-topic:superapp_*:consumer"
      - username: "admin"
        firstName: "Admin"
        lastName: "Doe"
        email: "admin@example.com"
        enabled: True
        emailVerified: False
        credentials:
          - type: password
            value: "admin-password"
        realmRoles:
          - "admin"
        clientRoles:
          kafka:
            - "kafka-admin"
          realm-management:
            - "realm-admin"

      # useless?
#      - username: "service-account-kafka-broker"
#        email: "service-account-kafka-broker@placeholder.org"
#        enabled: True
#        emailVerified: False
#        clientRoles:
#          kafka:
#            - "kafka-admin"
#      - username: "service-account-kafka-producer"
#        email: "service-account-kafka-producer@placeholder.org"
#        enabled: True
#        emailVerified: False
#
#        serviceAccountClientId: "kafka-producer"
#      - username: "service-account-kafka-consumer"
#        email: "service-account-kafka-consumer@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "kafka-consumer"
#
#      - username: "service-account-kafka-connect"
#        email: "service-account-kafka-connect@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "kafka-connect"
#
#      - username: "service-account-kafka-bridge"
#        email: "service-account-kafka-bridge@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "kafka-bridge"
#
#      - username: "service-account-kafka-mirror-maker"
#        email: "service-account-kafka-mirror-maker@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "kafka-mirror-maker"
#
#      - username: "service-account-kafka-mirror-maker-2"
#        email: "service-account-kafka-mirror-maker-2@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "kafka-mirror-maker-2"
#
#      - username: "service-account-hello-world-producer"
#        email: "service-account-hello-world-producer@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "hello-world-producer"
#
#      - username: "service-account-hello-world-consumer"
#        email: "service-account-hello-world-consumer@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "hello-world-consumer"
#
#      - username: "service-account-hello-world-streams"
#        email: "service-account-hello-world-streams@placeholder.org"
#        enabled: True
#        emailVerified: False
#        serviceAccountClientId: "hello-world-streams"

  clients:
    - clientId: "kafka"
      enabled: true
      publicClient: true
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: false
      serviceAccountsEnabled: false
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-broker"
      clientAuthenticatorType: "client-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-producer"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-producer-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-consumer"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-consumer-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "hello-world-producer"
      clientAuthenticatorType: "client-secret"
      secret: "hello-world-producer-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "hello-world-consumer"
      clientAuthenticatorType: "client-secret"
      secret: "hello-world-consumer-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "hello-world-streams"
      clientAuthenticatorType: "client-secret"
      secret: "hello-world-streams-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-connect"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-connect-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-bridge"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-bridge-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-mirror-maker"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-mirror-maker-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

    - clientId: "kafka-mirror-maker-2"
      clientAuthenticatorType: "client-secret"
      secret: "kafka-mirror-maker-2-secret"
      enabled: true
      publicClient: false
      bearerOnly: false
      standardFlowEnabled: false
      implicitFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      consentRequired: false
      fullScopeAllowed: false

  instanceSelector:
    matchLabels:
      app: sso
